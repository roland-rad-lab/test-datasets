
profiles {
	charliecloud {
		charliecloud {
			// nextflow automatically takes the container env file, at the moment it is not possible to mix file and var types as it will try to read your var as a file
			runOptions = '--no-passwd --set-env=/dss/dssfs02/lwp-dss-0001/pn29ya/pn29ya-dss-0000/nextflow-env/mocaseq/env --bind /gpfs/scratch/pn29ya/${USER}/${USER}/tmp:/tmp --bind /dss/dssfs02/lwp-dss-0001/pn29ya/pn29ya-dss-0000/reference:/var/pipeline/ref --bind /dss/dssfs02/lwp-dss-0001/pn29ya/pn29ya-dss-0000/projects:/dss/dssfs02/lwp-dss-0001/pn29ya/pn29ya-dss-0000/projects'
		}

		process {
			container = '/dss/dsshome1/lxc0C/ge26baf2/images-live/mocaseq2'
			executor = 'slurm'
			clusterOptions = '--cluster=serial'
			cpus = 1
			memory = '2 GB'
			time = '1h'

			// withName blocks cannot be empty

			withName: delly_matched_call {
				memory = '20 GB'
				time = '35h'
				errorStrategy = 'finish'
			}

			withName: delly_matched_filter {
				memory = '5 GB'
				time = '16h'
				errorStrategy = 'finish'
			}

			withName: fastqc_paired {
				memory = '5 GB'
				time = '20h'
				errorStrategy = 'finish'
			}

			withName: trim_paired {
				memory = '5 GB'
				time = '24h'
				errorStrategy = 'finish'
			}

			withName: bwa_mem_paired {
				cpus = 16
				memory = '32 GB'
				time = '72h'
				errorStrategy = 'finish'
			}

			withName: mark_duplicates {
				cpus = 6
				memory = '21 GB'
				time = '72h'
				errorStrategy = 'finish'
			}

			withName: recalibrate {
				cpus = 6
				memory = '21 GB'
				time = '72h'
				errorStrategy = 'finish'
			}

			withName: mutect_matched {
				cpus = 5
				memory = '12 GB'
				time = '44h'
				errorStrategy = 'finish'
			}

			withName: mutect_single_normal {
				cpus = 5
				memory = '12 GB'
				time = '44h'
				errorStrategy = 'finish'
			}

			withName: mutect_single_tumor {
				cpus = 5
				memory = '12 GB'
				time = '44h'
				errorStrategy = 'finish'
			}

			withName: mutect_combine_vcf {
				cpus = 5
				memory = '12 GB'
				time = '44h'
				errorStrategy = 'finish'
			}

			withName: manta_matched {
				cpus = 21
				memory = '50 GB'
				time = '48h'
				errorStrategy = 'finish'
			}

			withName: manta_matched_post {
				memory = '17 GB'
				time = '5h'
				errorStrategy = 'finish'
			}

			withName: sam_to_fastq_paired {
				cpus = 2
				memory = '44 GB'
				time = '24h'
				errorStrategy = 'finish'
			}

			withName: strelka_matched {
				cpus = 5
				time = '8h'
				errorStrategy = 'finish'
			}


			withName: cnv_kit_coverage {
				container = '/dss/dsshome1/lxc0C/ge26baf2/images-live/cnvkit-0.9.9'
				cpus = 5
				time = '12h'
				memory = '15 GB'
				errorStrategy = 'finish'
			}

			withName: cnv_kit_single {
				cpus = 5
				errorStrategy = 'finish'
			}

			withName: hmm_copy_wig {
				memory = '5 GB'
				time = '10h'
				errorStrategy = 'finish'
			}

			withName: hmm_copy_tsv {
				memory = '15 GB'
				time = '5h'
				errorStrategy = 'finish'	
			}

			withName: hmm_copy_plot {
				memory = '2 GB'
				time = '1h'
				errorStrategy = 'finish'
			}

			withName: igv_track_depth {
				time = '4h'
				memory = '50 GB'
				errorStrategy = 'finish'
			}

			withName: igv_track_cnr {
				container = '/dss/dsshome1/lxc0C/ge26baf2/images-live/structural-variation-jabba'
				errorStrategy = 'finish'
			}

			withName: igv_track_rds {
				container = '/dss/dsshome1/lxc0C/ge26baf2/images-live/structural-variation-jabba'
				errorStrategy = 'finish'
			}

			withName: jabba_matched {
				time = '44h'
				memory = '20 GB'
				container = '/dss/dsshome1/lxc0C/ge26baf2/images-live/structural-variation-jabba'
				errorStrategy = 'ignore'
			}

			withName: jabba_plot {
				time = '20h'
				memory = '10 GB'
				container = '/dss/dsshome1/lxc0C/ge26baf2/images-live/structural-variation-jabba'
				errorStrategy = 'ignore'
			}

			withName: loh_matched {
				memory = '10 GB'
				time = '10h'
				errorStrategy = 'finish'
			}

			withName: loh_matched_assign_alleles {
				memory = '5 GB'
				time = '5h'
				errorStrategy = 'finish'
			}

			withName: msi_matched {
				memory = '5 GB'
				time = '10h'
				errorStrategy = 'finish'
			}	
		}
	}
}

// Here we downgrade GATK to a specific version (this one has known issues be we wanted consistency with previous data)
// We also tell the pipeline where we mounted the reference genomes
params.gatk.jar = "/opt/gatk-4.1.7.0/gatk.jar"
params.genomes_base = "/var/pipeline/ref"

